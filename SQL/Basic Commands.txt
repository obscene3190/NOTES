CREATE DATABASE basename;
CREATE TABLE tablename(
	id INT NOT NULL AUTO_INCREMENT,
	.....;
);

SELECT * FROM tablename;
SELECT `field1`, `field2`,... FROM tablename.... WHERE id > 3 AND id <5
TRUNCATE tablename;
DROP TABLE tablename
DROP DATABASE basename

UPDATE tablename SET `fieldname` = 'smth new' WHERE tablename.fieldname = 'smth'

INSERT INTO tablename (field1, field2)
	VALUES
	(...),
	(...);

ALTER TABLE tname CHANGE oldname newname TYPE


WHERE -> ORDER -> LIMIT

ORDER BY fieldname (DESC - убывание)- сортровочка

BETWEEN a AND b
IN(a1, a2, a3) == id == a1 OR id == a2...
WHERE name LIKE 'И%' - все имена, которые начинаются на И

DISTINCT - неповторяющиеся элементы
LIMIT n,m - ограничение выборки всега в конце записывается,
n -сколько пропускаем, m - сколько выводим
AND OR <>
IS NULL - сравнение с NULL
NOT NULL - not NULL field

Индексация 

CREATE INDEX iname ON tablename(fieldname)
DROP INDEX iname ON tablename

ССЫЛКИ

CREATE TABLE tablename(
	id INT NOT NULL AUTO_INCREMENT,
	.....

	FOREIGN KEY(keyname) REFERENCES tablename2(keyname2);
);

DATETIME DEFAULT CURRENT_TIMESTAMP

Объединение:
сравнение данных
см. картинку в инете по объединению.

INNER JOIN - не важно, из какой таблицы мы берем данные...(?)
Example:
SELECT table1,field1, table2,field2, ... FROM tableI
INNER JOIN table2 ON table1.field1 = table2.field2

RIGHT JOIN - ИЗ 1 И СРАВНИВАЕМ СО ВТОРОЙ

LEFT JOIN
Example:
SELECT table1,field1, table2.field2 FROM table1
LEFT JOIN table2 ON table1

ПСЕВДОНИМЫ(для полей и для табличек)
используются для объединения

поля
SELECT fieldname AS 'FIELDNAME' FROM table
SELECT CONCAT('NAME1 ', field, 'NAME2 ', field2) AS 'NAME1+2' FROM table1

таблицы
SELECT t1.field1 FROM table1 AS t1

КОМАНДЫ

SELECT COUNT(field) FROM table

SELECT MIN/MAX/AVG/SUM(field) FROM table

UCASE/LCASE - в верхний/нижний регистр

GROUP BY:
кол-во полей
SELECT field, COUNT(field) AS 'amount' FROM table GROUP BY field

HAVING ... какие конкректно записи
